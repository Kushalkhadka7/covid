// Code generated by protoc-gen-go. DO NOT EDIT.
// source: covid.proto

package covid

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CountryResposne struct {
	Country              string   `protobuf:"bytes,1,opt,name=Country,proto3" json:"Country,omitempty"`
	CountryCode          string   `protobuf:"bytes,2,opt,name=CountryCode,proto3" json:"CountryCode,omitempty"`
	Province             string   `protobuf:"bytes,3,opt,name=Province,proto3" json:"Province,omitempty"`
	City                 string   `protobuf:"bytes,4,opt,name=City,proto3" json:"City,omitempty"`
	CityCode             string   `protobuf:"bytes,5,opt,name=CityCode,proto3" json:"CityCode,omitempty"`
	Lat                  string   `protobuf:"bytes,6,opt,name=Lat,proto3" json:"Lat,omitempty"`
	Lon                  string   `protobuf:"bytes,7,opt,name=Lon,proto3" json:"Lon,omitempty"`
	Confirmed            int64    `protobuf:"varint,8,opt,name=Confirmed,proto3" json:"Confirmed,omitempty"`
	Deaths               int64    `protobuf:"varint,9,opt,name=Deaths,proto3" json:"Deaths,omitempty"`
	Recovered            int64    `protobuf:"varint,10,opt,name=Recovered,proto3" json:"Recovered,omitempty"`
	Active               int64    `protobuf:"varint,11,opt,name=Active,proto3" json:"Active,omitempty"`
	Date                 string   `protobuf:"bytes,12,opt,name=Date,proto3" json:"Date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountryResposne) Reset()         { *m = CountryResposne{} }
func (m *CountryResposne) String() string { return proto.CompactTextString(m) }
func (*CountryResposne) ProtoMessage()    {}
func (*CountryResposne) Descriptor() ([]byte, []int) {
	return fileDescriptor_0443ef560d94e87e, []int{0}
}

func (m *CountryResposne) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryResposne.Unmarshal(m, b)
}
func (m *CountryResposne) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryResposne.Marshal(b, m, deterministic)
}
func (m *CountryResposne) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryResposne.Merge(m, src)
}
func (m *CountryResposne) XXX_Size() int {
	return xxx_messageInfo_CountryResposne.Size(m)
}
func (m *CountryResposne) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryResposne.DiscardUnknown(m)
}

var xxx_messageInfo_CountryResposne proto.InternalMessageInfo

func (m *CountryResposne) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *CountryResposne) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *CountryResposne) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *CountryResposne) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *CountryResposne) GetCityCode() string {
	if m != nil {
		return m.CityCode
	}
	return ""
}

func (m *CountryResposne) GetLat() string {
	if m != nil {
		return m.Lat
	}
	return ""
}

func (m *CountryResposne) GetLon() string {
	if m != nil {
		return m.Lon
	}
	return ""
}

func (m *CountryResposne) GetConfirmed() int64 {
	if m != nil {
		return m.Confirmed
	}
	return 0
}

func (m *CountryResposne) GetDeaths() int64 {
	if m != nil {
		return m.Deaths
	}
	return 0
}

func (m *CountryResposne) GetRecovered() int64 {
	if m != nil {
		return m.Recovered
	}
	return 0
}

func (m *CountryResposne) GetActive() int64 {
	if m != nil {
		return m.Active
	}
	return 0
}

func (m *CountryResposne) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

type TotalResponse struct {
	Total                             string   `protobuf:"bytes,1,opt,name=Total,proto3" json:"Total,omitempty"`
	All                               string   `protobuf:"bytes,2,opt,name=All,proto3" json:"All,omitempty"`
	AllUpdated                        string   `protobuf:"bytes,3,opt,name=AllUpdated,proto3" json:"AllUpdated,omitempty"`
	Countries                         string   `protobuf:"bytes,4,opt,name=Countries,proto3" json:"Countries,omitempty"`
	CountriesUpdated                  string   `protobuf:"bytes,5,opt,name=CountriesUpdated,proto3" json:"CountriesUpdated,omitempty"`
	ByCountry                         string   `protobuf:"bytes,6,opt,name=ByCountry,proto3" json:"ByCountry,omitempty"`
	ByCountryUpdated                  string   `protobuf:"bytes,7,opt,name=ByCountryUpdated,proto3" json:"ByCountryUpdated,omitempty"`
	ByCountryLive                     string   `protobuf:"bytes,8,opt,name=ByCountryLive,proto3" json:"ByCountryLive,omitempty"`
	ByCountryLiveUpdated              string   `protobuf:"bytes,9,opt,name=ByCountryLiveUpdated,proto3" json:"ByCountryLiveUpdated,omitempty"`
	ByCountryTotal                    string   `protobuf:"bytes,10,opt,name=ByCountryTotal,proto3" json:"ByCountryTotal,omitempty"`
	ByCountryTotalUpdated             string   `protobuf:"bytes,11,opt,name=ByCountryTotalUpdated,proto3" json:"ByCountryTotalUpdated,omitempty"`
	DayOne                            string   `protobuf:"bytes,12,opt,name=DayOne,proto3" json:"DayOne,omitempty"`
	DayOneUpdated                     string   `protobuf:"bytes,13,opt,name=DayOneUpdated,proto3" json:"DayOneUpdated,omitempty"`
	DayOneLive                        string   `protobuf:"bytes,14,opt,name=DayOneLive,proto3" json:"DayOneLive,omitempty"`
	DayOneLiveUpdated                 string   `protobuf:"bytes,15,opt,name=DayOneLiveUpdated,proto3" json:"DayOneLiveUpdated,omitempty"`
	DayOneTotal                       string   `protobuf:"bytes,16,opt,name=DayOneTotal,proto3" json:"DayOneTotal,omitempty"`
	DayOneTotalUpdated                string   `protobuf:"bytes,17,opt,name=DayOneTotalUpdated,proto3" json:"DayOneTotalUpdated,omitempty"`
	LiveCountryStatus                 string   `protobuf:"bytes,18,opt,name=LiveCountryStatus,proto3" json:"LiveCountryStatus,omitempty"`
	LiveCountryStatusUpdated          string   `protobuf:"bytes,19,opt,name=LiveCountryStatusUpdated,proto3" json:"LiveCountryStatusUpdated,omitempty"`
	LiveCountryStatusAfterDate        string   `protobuf:"bytes,20,opt,name=LiveCountryStatusAfterDate,proto3" json:"LiveCountryStatusAfterDate,omitempty"`
	LiveCountryStatusAfterDateUpdated string   `protobuf:"bytes,21,opt,name=LiveCountryStatusAfterDateUpdated,proto3" json:"LiveCountryStatusAfterDateUpdated,omitempty"`
	Stats                             string   `protobuf:"bytes,22,opt,name=Stats,proto3" json:"Stats,omitempty"`
	StatsUpdated                      string   `protobuf:"bytes,23,opt,name=StatsUpdated,proto3" json:"StatsUpdated,omitempty"`
	Default                           string   `protobuf:"bytes,24,opt,name=Default,proto3" json:"Default,omitempty"`
	DefaultUpdated                    string   `protobuf:"bytes,25,opt,name=DefaultUpdated,proto3" json:"DefaultUpdated,omitempty"`
	SubmitWebhook                     string   `protobuf:"bytes,26,opt,name=SubmitWebhook,proto3" json:"SubmitWebhook,omitempty"`
	SubmitWebhookUpdated              string   `protobuf:"bytes,27,opt,name=SubmitWebhookUpdated,proto3" json:"SubmitWebhookUpdated,omitempty"`
	Summary                           string   `protobuf:"bytes,28,opt,name=Summary,proto3" json:"Summary,omitempty"`
	SummaryUpdated                    string   `protobuf:"bytes,29,opt,name=SummaryUpdated,proto3" json:"SummaryUpdated,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *TotalResponse) Reset()         { *m = TotalResponse{} }
func (m *TotalResponse) String() string { return proto.CompactTextString(m) }
func (*TotalResponse) ProtoMessage()    {}
func (*TotalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0443ef560d94e87e, []int{1}
}

func (m *TotalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalResponse.Unmarshal(m, b)
}
func (m *TotalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalResponse.Marshal(b, m, deterministic)
}
func (m *TotalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalResponse.Merge(m, src)
}
func (m *TotalResponse) XXX_Size() int {
	return xxx_messageInfo_TotalResponse.Size(m)
}
func (m *TotalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TotalResponse proto.InternalMessageInfo

func (m *TotalResponse) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *TotalResponse) GetAll() string {
	if m != nil {
		return m.All
	}
	return ""
}

func (m *TotalResponse) GetAllUpdated() string {
	if m != nil {
		return m.AllUpdated
	}
	return ""
}

func (m *TotalResponse) GetCountries() string {
	if m != nil {
		return m.Countries
	}
	return ""
}

func (m *TotalResponse) GetCountriesUpdated() string {
	if m != nil {
		return m.CountriesUpdated
	}
	return ""
}

func (m *TotalResponse) GetByCountry() string {
	if m != nil {
		return m.ByCountry
	}
	return ""
}

func (m *TotalResponse) GetByCountryUpdated() string {
	if m != nil {
		return m.ByCountryUpdated
	}
	return ""
}

func (m *TotalResponse) GetByCountryLive() string {
	if m != nil {
		return m.ByCountryLive
	}
	return ""
}

func (m *TotalResponse) GetByCountryLiveUpdated() string {
	if m != nil {
		return m.ByCountryLiveUpdated
	}
	return ""
}

func (m *TotalResponse) GetByCountryTotal() string {
	if m != nil {
		return m.ByCountryTotal
	}
	return ""
}

func (m *TotalResponse) GetByCountryTotalUpdated() string {
	if m != nil {
		return m.ByCountryTotalUpdated
	}
	return ""
}

func (m *TotalResponse) GetDayOne() string {
	if m != nil {
		return m.DayOne
	}
	return ""
}

func (m *TotalResponse) GetDayOneUpdated() string {
	if m != nil {
		return m.DayOneUpdated
	}
	return ""
}

func (m *TotalResponse) GetDayOneLive() string {
	if m != nil {
		return m.DayOneLive
	}
	return ""
}

func (m *TotalResponse) GetDayOneLiveUpdated() string {
	if m != nil {
		return m.DayOneLiveUpdated
	}
	return ""
}

func (m *TotalResponse) GetDayOneTotal() string {
	if m != nil {
		return m.DayOneTotal
	}
	return ""
}

func (m *TotalResponse) GetDayOneTotalUpdated() string {
	if m != nil {
		return m.DayOneTotalUpdated
	}
	return ""
}

func (m *TotalResponse) GetLiveCountryStatus() string {
	if m != nil {
		return m.LiveCountryStatus
	}
	return ""
}

func (m *TotalResponse) GetLiveCountryStatusUpdated() string {
	if m != nil {
		return m.LiveCountryStatusUpdated
	}
	return ""
}

func (m *TotalResponse) GetLiveCountryStatusAfterDate() string {
	if m != nil {
		return m.LiveCountryStatusAfterDate
	}
	return ""
}

func (m *TotalResponse) GetLiveCountryStatusAfterDateUpdated() string {
	if m != nil {
		return m.LiveCountryStatusAfterDateUpdated
	}
	return ""
}

func (m *TotalResponse) GetStats() string {
	if m != nil {
		return m.Stats
	}
	return ""
}

func (m *TotalResponse) GetStatsUpdated() string {
	if m != nil {
		return m.StatsUpdated
	}
	return ""
}

func (m *TotalResponse) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *TotalResponse) GetDefaultUpdated() string {
	if m != nil {
		return m.DefaultUpdated
	}
	return ""
}

func (m *TotalResponse) GetSubmitWebhook() string {
	if m != nil {
		return m.SubmitWebhook
	}
	return ""
}

func (m *TotalResponse) GetSubmitWebhookUpdated() string {
	if m != nil {
		return m.SubmitWebhookUpdated
	}
	return ""
}

func (m *TotalResponse) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *TotalResponse) GetSummaryUpdated() string {
	if m != nil {
		return m.SummaryUpdated
	}
	return ""
}

type CountryResponseList struct {
	Data                 []*CountryResposne `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CountryResponseList) Reset()         { *m = CountryResponseList{} }
func (m *CountryResponseList) String() string { return proto.CompactTextString(m) }
func (*CountryResponseList) ProtoMessage()    {}
func (*CountryResponseList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0443ef560d94e87e, []int{2}
}

func (m *CountryResponseList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryResponseList.Unmarshal(m, b)
}
func (m *CountryResponseList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryResponseList.Marshal(b, m, deterministic)
}
func (m *CountryResponseList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryResponseList.Merge(m, src)
}
func (m *CountryResponseList) XXX_Size() int {
	return xxx_messageInfo_CountryResponseList.Size(m)
}
func (m *CountryResponseList) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryResponseList.DiscardUnknown(m)
}

var xxx_messageInfo_CountryResponseList proto.InternalMessageInfo

func (m *CountryResponseList) GetData() []*CountryResposne {
	if m != nil {
		return m.Data
	}
	return nil
}

type Country struct {
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Country) Reset()         { *m = Country{} }
func (m *Country) String() string { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()    {}
func (*Country) Descriptor() ([]byte, []int) {
	return fileDescriptor_0443ef560d94e87e, []int{3}
}

func (m *Country) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Country.Unmarshal(m, b)
}
func (m *Country) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Country.Marshal(b, m, deterministic)
}
func (m *Country) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Country.Merge(m, src)
}
func (m *Country) XXX_Size() int {
	return xxx_messageInfo_Country.Size(m)
}
func (m *Country) XXX_DiscardUnknown() {
	xxx_messageInfo_Country.DiscardUnknown(m)
}

var xxx_messageInfo_Country proto.InternalMessageInfo

func (m *Country) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_0443ef560d94e87e, []int{4}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CountryResposne)(nil), "covid.CountryResposne")
	proto.RegisterType((*TotalResponse)(nil), "covid.TotalResponse")
	proto.RegisterType((*CountryResponseList)(nil), "covid.CountryResponseList")
	proto.RegisterType((*Country)(nil), "covid.Country")
	proto.RegisterType((*Void)(nil), "covid.Void")
}

func init() {
	proto.RegisterFile("covid.proto", fileDescriptor_0443ef560d94e87e)
}

var fileDescriptor_0443ef560d94e87e = []byte{
	// 675 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x95, 0x5b, 0x6f, 0x1a, 0x3b,
	0x10, 0xc7, 0x43, 0xb8, 0x24, 0x0c, 0xb9, 0x4e, 0x48, 0x8e, 0x0f, 0x27, 0x39, 0xe2, 0xac, 0x8e,
	0xaa, 0x28, 0xaa, 0xa2, 0x2a, 0xed, 0x53, 0x2b, 0x55, 0xa2, 0xf0, 0x88, 0xd4, 0x8a, 0xf4, 0xf2,
	0xec, 0xb0, 0x8e, 0xb2, 0x2a, 0xac, 0xa3, 0x5d, 0x83, 0xc4, 0xc7, 0xe8, 0x07, 0xea, 0x77, 0xab,
	0x66, 0xc6, 0x5e, 0xd8, 0x40, 0xda, 0xa7, 0x9d, 0xf9, 0xcd, 0xf8, 0xef, 0xf1, 0xac, 0x2f, 0xd0,
	0x1a, 0xdb, 0x79, 0x12, 0x5f, 0x3f, 0x66, 0xd6, 0x59, 0xac, 0xb3, 0x13, 0xfd, 0xdc, 0x86, 0xc3,
	0xbe, 0x9d, 0xa5, 0x2e, 0x5b, 0x8c, 0x4c, 0xfe, 0x68, 0xf3, 0xd4, 0xa0, 0x82, 0x1d, 0x8f, 0x54,
	0xa5, 0x5b, 0xb9, 0x6c, 0x8e, 0x82, 0x8b, 0x5d, 0x68, 0x79, 0xb3, 0x6f, 0x63, 0xa3, 0xb6, 0x39,
	0xba, 0x8a, 0xb0, 0x03, 0xbb, 0x9f, 0x32, 0x3b, 0x4f, 0xd2, 0xb1, 0x51, 0x55, 0x0e, 0x17, 0x3e,
	0x22, 0xd4, 0xfa, 0x89, 0x5b, 0xa8, 0x1a, 0x73, 0xb6, 0x29, 0x9f, 0xbe, 0x2c, 0x57, 0x97, 0xfc,
	0xe0, 0xe3, 0x11, 0x54, 0x87, 0xda, 0xa9, 0x06, 0x63, 0x32, 0x99, 0xd8, 0x54, 0xed, 0x78, 0x62,
	0x53, 0x3c, 0x87, 0x66, 0xdf, 0xa6, 0xf7, 0x49, 0x36, 0x35, 0xb1, 0xda, 0xed, 0x56, 0x2e, 0xab,
	0xa3, 0x25, 0xc0, 0x33, 0x68, 0x0c, 0x8c, 0x76, 0x0f, 0xb9, 0x6a, 0x72, 0xc8, 0x7b, 0x34, 0x6a,
	0x64, 0xc6, 0x76, 0x6e, 0x32, 0x13, 0x2b, 0x90, 0x51, 0x05, 0xa0, 0x51, 0xbd, 0xb1, 0x4b, 0xe6,
	0x46, 0xb5, 0x64, 0x94, 0x78, 0x54, 0xff, 0x40, 0x3b, 0xa3, 0xf6, 0xa4, 0x7e, 0xb2, 0xa3, 0x1f,
	0x4d, 0xd8, 0xff, 0x6c, 0x9d, 0x9e, 0x70, 0xf7, 0xd2, 0xdc, 0x60, 0x1b, 0xea, 0x0c, 0x7c, 0xef,
	0xc4, 0xa1, 0xca, 0x7b, 0x93, 0x89, 0xef, 0x18, 0x99, 0xf8, 0x2f, 0x40, 0x6f, 0x32, 0xf9, 0xf2,
	0x18, 0x6b, 0x67, 0x62, 0xdf, 0xab, 0x15, 0x22, 0x2b, 0xa3, 0xc6, 0x26, 0x26, 0xf7, 0x2d, 0x5b,
	0x02, 0xbc, 0x82, 0xa3, 0xc2, 0x09, 0x1a, 0xd2, 0xbf, 0x35, 0x4e, 0x4a, 0x1f, 0x16, 0xe1, 0x8f,
	0x4a, 0x37, 0x97, 0x80, 0x94, 0x0a, 0x27, 0x28, 0x49, 0x83, 0xd7, 0x38, 0xfe, 0x0f, 0xfb, 0x05,
	0x1b, 0x52, 0x83, 0x76, 0x39, 0xb1, 0x0c, 0xf1, 0x06, 0xda, 0x25, 0x10, 0x54, 0x9b, 0x9c, 0xbc,
	0x31, 0x86, 0x2f, 0xe0, 0xa0, 0xe0, 0xd2, 0x3e, 0xe0, 0xec, 0x27, 0x14, 0xdf, 0xc0, 0x69, 0x99,
	0x04, 0xf1, 0x16, 0xa7, 0x6f, 0x0e, 0xf2, 0x3e, 0xd0, 0x8b, 0x8f, 0x69, 0xf8, 0x77, 0xde, 0xa3,
	0xf5, 0x88, 0x15, 0x54, 0xf6, 0x65, 0x3d, 0x25, 0x48, 0x7f, 0x4a, 0x00, 0x2f, 0xf9, 0x40, 0xfe,
	0xd4, 0x92, 0xe0, 0x4b, 0x38, 0x5e, 0x7a, 0x41, 0xe9, 0x90, 0xd3, 0xd6, 0x03, 0x74, 0x86, 0x04,
	0xca, 0x32, 0x8f, 0xe4, 0x0c, 0xad, 0x20, 0xbc, 0x06, 0x5c, 0x71, 0x83, 0xe0, 0x31, 0x27, 0x6e,
	0x88, 0xd0, 0xfc, 0x34, 0x81, 0x5f, 0xf8, 0xad, 0xd3, 0x6e, 0x96, 0x2b, 0x94, 0xf9, 0xd7, 0x02,
	0xf8, 0x16, 0xd4, 0x1a, 0x0c, 0x73, 0x9c, 0xf0, 0xa0, 0x67, 0xe3, 0xf8, 0x1e, 0x3a, 0x6b, 0xb1,
	0xde, 0xbd, 0x33, 0x19, 0x9f, 0x8b, 0x36, 0x8f, 0xfe, 0x4d, 0x06, 0x0e, 0xe1, 0xbf, 0xe7, 0xa3,
	0xa1, 0x88, 0x53, 0x96, 0xf9, 0x73, 0x22, 0x9d, 0x34, 0x8a, 0xe4, 0xea, 0x4c, 0x4e, 0x1a, 0x3b,
	0x18, 0xc1, 0x1e, 0x1b, 0x41, 0xee, 0x2f, 0x0e, 0x96, 0x18, 0xdd, 0x70, 0x03, 0x73, 0xaf, 0x67,
	0x13, 0xa7, 0x94, 0xdc, 0x70, 0xde, 0xa5, 0x7d, 0xe8, 0xcd, 0x30, 0xfe, 0x6f, 0xd9, 0x87, 0x65,
	0x4a, 0x3b, 0xe7, 0x76, 0x76, 0x37, 0x4d, 0xdc, 0x37, 0x73, 0xf7, 0x60, 0xed, 0x77, 0xd5, 0x91,
	0x9d, 0x53, 0x82, 0x74, 0x12, 0x4a, 0x20, 0x68, 0xfe, 0x23, 0x27, 0x61, 0x53, 0x8c, 0x6a, 0xbb,
	0x9d, 0x4d, 0xa7, 0x3a, 0x5b, 0xa8, 0x73, 0xa9, 0xcd, 0xbb, 0x54, 0x9b, 0x37, 0x83, 0xce, 0x85,
	0xd4, 0x56, 0xa6, 0x51, 0x0f, 0x4e, 0x56, 0xaf, 0xf4, 0x34, 0x37, 0xc3, 0x24, 0x77, 0x78, 0x05,
	0xb5, 0x58, 0x3b, 0xad, 0x2a, 0xdd, 0xea, 0x65, 0xeb, 0xe6, 0xec, 0x5a, 0x5e, 0x83, 0x27, 0x97,
	0xff, 0x88, 0x73, 0xa2, 0x8b, 0xe2, 0x09, 0xa0, 0x5b, 0x2f, 0xd5, 0xd3, 0x70, 0xd9, 0xb3, 0x1d,
	0x35, 0xa0, 0xf6, 0xd5, 0x26, 0xf1, 0xcd, 0x1c, 0xea, 0x7d, 0x52, 0xc1, 0x77, 0xc5, 0xc3, 0x30,
	0xd0, 0x4e, 0xe3, 0x41, 0x59, 0xbc, 0xd3, 0xd9, 0x30, 0x99, 0x2f, 0x2b, 0xda, 0xc2, 0x57, 0xd0,
	0xe4, 0xfd, 0xcc, 0x43, 0x5b, 0x3e, 0x95, 0xf4, 0x3b, 0x6d, 0xef, 0x94, 0x6e, 0xd8, 0x68, 0xeb,
	0xae, 0xc1, 0x6f, 0xd8, 0xeb, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x03, 0x35, 0xc6, 0xd2,
	0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CovidClient is the client API for Covid service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CovidClient interface {
	CountryData(ctx context.Context, in *Country, opts ...grpc.CallOption) (*CountryResponseList, error)
	TotalData(ctx context.Context, in *Void, opts ...grpc.CallOption) (*TotalResponse, error)
}

type covidClient struct {
	cc grpc.ClientConnInterface
}

func NewCovidClient(cc grpc.ClientConnInterface) CovidClient {
	return &covidClient{cc}
}

func (c *covidClient) CountryData(ctx context.Context, in *Country, opts ...grpc.CallOption) (*CountryResponseList, error) {
	out := new(CountryResponseList)
	err := c.cc.Invoke(ctx, "/covid.Covid/CountryData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *covidClient) TotalData(ctx context.Context, in *Void, opts ...grpc.CallOption) (*TotalResponse, error) {
	out := new(TotalResponse)
	err := c.cc.Invoke(ctx, "/covid.Covid/TotalData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CovidServer is the server API for Covid service.
type CovidServer interface {
	CountryData(context.Context, *Country) (*CountryResponseList, error)
	TotalData(context.Context, *Void) (*TotalResponse, error)
}

// UnimplementedCovidServer can be embedded to have forward compatible implementations.
type UnimplementedCovidServer struct {
}

func (*UnimplementedCovidServer) CountryData(ctx context.Context, req *Country) (*CountryResponseList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountryData not implemented")
}
func (*UnimplementedCovidServer) TotalData(ctx context.Context, req *Void) (*TotalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TotalData not implemented")
}

func RegisterCovidServer(s *grpc.Server, srv CovidServer) {
	s.RegisterService(&_Covid_serviceDesc, srv)
}

func _Covid_CountryData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Country)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CovidServer).CountryData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covid.Covid/CountryData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CovidServer).CountryData(ctx, req.(*Country))
	}
	return interceptor(ctx, in, info, handler)
}

func _Covid_TotalData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CovidServer).TotalData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/covid.Covid/TotalData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CovidServer).TotalData(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _Covid_serviceDesc = grpc.ServiceDesc{
	ServiceName: "covid.Covid",
	HandlerType: (*CovidServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CountryData",
			Handler:    _Covid_CountryData_Handler,
		},
		{
			MethodName: "TotalData",
			Handler:    _Covid_TotalData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "covid.proto",
}
